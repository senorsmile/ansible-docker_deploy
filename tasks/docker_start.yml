---
- name: "{{ docker_app_num }}/{{ docker_apps_total}}: START CONTAINER: Get docker_app name passed from outer function"
  set_fact:
    docker_app: "{{ item }}"

- name: "{{ docker_app_num }}/{{ docker_apps_total}}: START CONTAINER: Get image version: {{ docker_app['name'] }}"
  include: get_image_ver.yml

- name: "{{ docker_app_num }}/{{ docker_apps_total}}: START CONTAINER: Set app_status if pull is set to false: {{ docker_app['name'] }}"
  set_fact:
    app_status: "{
        '{{ docker_image_with_ver }}': {
          'changed': False
         }
      }"
  when: ( app_status[docker_image_with_ver] is not defined )


- name: "{{ docker_app_num }}/{{ docker_apps_total}} {{ docker_app['name'] }}: REMOVE CONTAINER"
  docker_container:
    name:   "{{ docker_app['name'] }}"
    state:  "absent"
  when: ( docker_app['docker']['state'] == 'absent' )


- name: "{{ docker_app_num }}/{{ docker_apps_total}} {{ docker_app['name'] }}: START CONTAINER"
  block:
  #--------------------------
  # start block
  #--------------------------

    - name: "{{ docker_app_num }}/{{ docker_apps_total}} {{ docker_app['name'] }}: START CONTAINER: {{ docker_image_with_ver }}"
      docker_container:
        name:           "{{ docker_app['name'] }}"
        image:          "{{ docker_image_with_ver }}"
        state:          "{{ docker_app['docker']['state']          | default('started') }}"
        ports:          "{{ docker_app['docker']['ports']          | default(omit) }}"
        command:        "{{ docker_app['docker']['command']        | default(omit) }}"
        volumes:        "{{ docker_app['docker']['volumes']        | default(omit) }}"
        links:          "{{ docker_app['docker']['links']          | default(omit) }}"
        expose:         "{{ docker_app['docker']['expose']         | default(omit) }}"
        log_driver:     "{{ docker_app['docker']['log_driver']     | default(omit) }}"
        log_options:    "{{ docker_app['docker']['log_options']    | default(omit) }}"
        dns_servers:    "{{ docker_app['docker']['dns_servers']    | default(omit) }}"
        user:           "{{ docker_app['docker']['user']           | default(omit) }}"
        capabilities:   "{{ docker_app['docker']['capabilities']   | default(omit) }}"
        cap_drop:       "{{ docker_app['docker']['cap_drop']       | default(omit) }}"
        networks:       "{{ docker_app['docker']['networks']       | default(omit) }}"
        networks_cli_compatible:        "{{ docker_app['docker']['networks_cli']      | default(omit) }}"
        restart_policy: "{{ docker_app['docker']['restart_policy'] | default('always') }}"
        env:            "{{ docker_app['docker']['env']            | default(docker_app['docker']['environment']) | default({}) }}"
        restart:        "{{ app_status[docker_image_with_ver]['changed'] | default(docker_force_restart) }}"
        pull:           false # always pull from the docker_pull.yml, NOT here

  #--------------------------
  # end block
  #--------------------------
  when:
    ( docker_image_with_ver != 'disabled:disabled' )
    and
    ( docker_app['docker']['state'] != 'absent' )

- name: Skip this image if disabled
  debug:
    msg: "{{ docker_app['name'] }} is disabled in the env for this node"
  when: ( docker_image_with_ver == 'disabled:disabled' )
